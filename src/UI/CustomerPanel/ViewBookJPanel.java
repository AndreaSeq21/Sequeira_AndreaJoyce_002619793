/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI.CustomerPanel;

import UI.LibrarianPanel.*;
import UI.SystemAdminPanel.*;
import Model.Employee.Employee;
import Model.Employee.EmployeeDirectory;
import Model.Library.Library;
import Model.Material.Book;
import Model.Material.BookCollection;
import Model.Rental.Rent;
import Model.Role.LibrarianRole;
import Model.Role.Role;
import Model.Role.SystemAdminRole;
import Model.system.ApplicationSystem;
import Model.system.Branch;
import Model.system.UserAccount;
import Model.system.UserAccountDirectory;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asequ
 */
public class ViewBookJPanel extends javax.swing.JPanel {

    private ApplicationSystem applicationsystem;
    private Branch branch;
    private UserAccount useraccount;
    DefaultTableModel viewTableModel;
    /** Creates new form CreateBranchJPanel */

    
    public ViewBookJPanel() {
        initComponents();

    }

    public ViewBookJPanel(ApplicationSystem applicationsystem, Branch branch, UserAccount useraccount) {
        initComponents();
        this.viewTableModel = (DefaultTableModel) tableBookTable.getModel();  
        this.applicationsystem = applicationsystem;
        this.branch = branch;
        this.useraccount = useraccount;
        displayBook();
        //displayLibraryDp();
//        displayBookDetails();
//        displayBook();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBookTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel12.setText("BOOK RENT HISTORY");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 280, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("SELECT LOCATION");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 800, 20));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 230, 30));

        tableBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK NAME", "No. of Pages", "Languages", "Author", "Genre", "Type of Binding", "Date", "Available", "Rent Price", "Rent Duration", "Serial Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBookTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 840, 260));

        jButton1.setText("ADD BOOK");
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, 150, 30));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBookTable;
    // End of variables declaration//GEN-END:variables

public String fetchBranchName()
    {
        String BranchName = "";
        String userAccountValue = this.useraccount.getAccountId();      
        ArrayList<Branch> br = this.applicationsystem.getBranches();
        int fetchNumber = 0;
        for(int i=0;i< br.size(); i++){
            String emp = br.get(i).getLib().getEmployeelist().getEmployeelist().get(i).getPersonId();
            if(emp.equals(userAccountValue) ){
                fetchNumber = i;
                break;  
            }
        }
        BranchName = br.get(fetchNumber).getName();
        System.out.println("BRANCH NAME PRINTING "+BranchName);
        return BranchName;
    }

    private void displayBook(){
        viewTableModel.setRowCount(0);
//        ArrayList<Branch> br = this.applicationsystem.getBranches();
       
        
          Library lib = this.branch.getLib();
          ArrayList<Book> bookcollection = lib.getBooklist().getBooklistCollection();
        
        
//        String branchNameFunc = fetchBranchName();
          for(int i =0;i< bookcollection.size();i++ ){
               Object row[] = new Object[11];
               if(bookcollection.get(i).getLocation().equals(useraccount.getAccessTo()))
               {
                     row[0] = bookcollection.get(i).getMaterialName();
                     row[1] = bookcollection.get(i).getNoOfPages();
                     row[2] = bookcollection.get(i).getLanguages();
                     row[3] = bookcollection.get(i).getAuthorName();
                     row[4] = bookcollection.get(i).getGenre();
                     row[5] = bookcollection.get(i).getTypeOfBinding();
                     row[6] = String.valueOf(bookcollection.get(i).getRegisteredDate());
                     row[7] = bookcollection.get(i).getIsAvailableFlag();
                     row[8] = bookcollection.get(i).getRt().getRentPrice();
                     row[9] = bookcollection.get(i).getRt().getRentDuration();
                     row[10] = bookcollection.get(i).getRt().getSerialNumber();
                    
                    viewTableModel.addRow(row);
               }
                  
             
              }    
          }
    }
    
 
     


